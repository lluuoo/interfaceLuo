package com.jite.hibgen.dao;

import com.jite.hibgen.model.*;

import java.util.List;

import javax.naming.InitialContext;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.hibernate.LockMode;
import org.hibernate.Query;
import org.hibernate.SessionFactory;

import static org.hibernate.criterion.Example.create;

public class TUserProfileLanguagesDao extends BaseDao<TUserProfileLanguages>{
	
	private static final Log log = LogFactory.getLog(TUserProfileLanguagesDao.class);

	public TUserProfileLanguagesDao(){
		super(TUserProfileLanguages.class);
	}
	public TUserProfileLanguagesDao(TUserProfileLanguages po){
		super(po.getClass());
	}
	public void persist(TUserProfileLanguages transientInstance) {
		log.debug("persisting TUserProfileLanguages instance");
		try {
			getHibernateTemplate().persist(transientInstance);
			log.debug("persist successful");
		} catch (RuntimeException re) {
			log.error("persist failed", re);
			throw re;
		}
	}

	public void attachDirty(TUserProfileLanguages instance) {
		log.debug("attaching dirty TUserProfileLanguages instance");
		try {
			getHibernateTemplate().saveOrUpdate(instance);
			log.debug("attach successful");
		} catch (RuntimeException re) {
			log.error("attach failed", re);
			throw re;
		}
	}

	public void attachClean(TUserProfileLanguages instance) {
		log.debug("attaching clean TUserProfileLanguages instance");
		try {
			getHibernateTemplate().lock(instance, LockMode.NONE);
			log.debug("attach successful");
		} catch (RuntimeException re) {
			log.error("attach failed", re);
			throw re;
		}
	}

	public void delete(TUserProfileLanguages persistentInstance) {
		log.debug("deleting TUserProfileLanguages instance");
		try {
			getHibernateTemplate().delete(persistentInstance);
			log.debug("delete successful");
		} catch (RuntimeException re) {
			log.error("delete failed", re);
			throw re;
		}
	}

	public TUserProfileLanguages merge(TUserProfileLanguages detachedInstance) {
		log.debug("merging TUserProfileExp instance");
		try {
			TUserProfileLanguages result = (TUserProfileLanguages) getHibernateTemplate().merge(detachedInstance);
			log.debug("merge successful");
			return result;
		} catch (RuntimeException re) {
			log.error("merge failed", re);
			throw re;
		}
	}

	public TUserProfileLanguages findById(java.lang.Long id) {
		log.debug("getting TUserProfileLanguages instance with id: " + id);
		try {
			TUserProfileLanguages instance = (TUserProfileLanguages) getHibernateTemplate().get(
							"com.jite.hibgen.model.TUserProfileLanguages", id);
			if (instance == null) {
				log.debug("get successful, no instance found");
			} else {
				log.debug("get successful, instance found");
			}
			return instance;
		} catch (RuntimeException re) {
			log.error("get failed", re);
			throw re;
		}
	}

	public List<TUserProfileLanguages> findByExample(
			TUserProfileLanguages instance) {
		log.debug("finding TUserProfileLanguages instance by example");
		try {
			List<TUserProfileLanguages> results = (List<TUserProfileLanguages>) getHibernateTemplate().getSessionFactory()
					.getCurrentSession()
					.createCriteria("com.jite.hibgen.model.TUserProfileLanguages")
					.add(create(instance)).list();
			log.debug("find by example successful, result size: "
					+ results.size());
			return results;
		} catch (RuntimeException re) {
			log.error("find by example failed", re);
			throw re;
		}
	}
	
	public void deleteByAccountId(Long accountId) {
		log.debug("delte TUserProfileLanguages by userId");
		try {
			String hql = "delete TUserProfileLanguages as tupi where tupi.accountId=?";
			Query query = getHibernateTemplate().getSessionFactory()
					.getCurrentSession().createQuery(hql);
			query.setLong(0, accountId);
			query.executeUpdate();
		} catch (Exception re) {
			log.error("Delete failed", re);
		}
	}
}

