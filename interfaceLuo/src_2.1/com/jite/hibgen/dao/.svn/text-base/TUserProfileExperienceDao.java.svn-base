package com.jite.hibgen.dao;

import com.jite.hibgen.model.*;

import java.util.List;

import javax.naming.InitialContext;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.hibernate.LockMode;
import org.hibernate.Query;
import org.hibernate.SessionFactory;

import static org.hibernate.criterion.Example.create;

public class TUserProfileExperienceDao extends BaseDao<TUserProfileExperience>{
	
	private static final Log log = LogFactory.getLog(TUserProfileExperienceDao.class);

	public TUserProfileExperienceDao(){
		super(TUserProfileExperience.class);
	}
	public TUserProfileExperienceDao(TUserProfileExperience po){
		super(po.getClass());
	}
	public void persist(TUserProfileExperience transientInstance) {
		log.debug("persisting TUserProfileExperience instance");
		try {
			getHibernateTemplate().persist(transientInstance);
			log.debug("persist successful");
		} catch (RuntimeException re) {
			log.error("persist failed", re);
			throw re;
		}
	}

	public void attachDirty(TUserProfileExperience instance) {
		log.debug("attaching dirty TUserProfileExperience instance");
		try {
			getHibernateTemplate().saveOrUpdate(instance);
			log.debug("attach successful");
		} catch (RuntimeException re) {
			log.error("attach failed", re);
			throw re;
		}
	}

	public void attachClean(TUserProfileExperience instance) {
		log.debug("attaching clean TUserProfileExperience instance");
		try {
			getHibernateTemplate().lock(instance, LockMode.NONE);
			log.debug("attach successful");
		} catch (RuntimeException re) {
			log.error("attach failed", re);
			throw re;
		}
	}

	public void delete(TUserProfileExperience persistentInstance) {
		log.debug("deleting TUserProfileExperience instance");
		try {
			getHibernateTemplate().delete(persistentInstance);
			log.debug("delete successful");
		} catch (RuntimeException re) {
			log.error("delete failed", re);
			throw re;
		}
	}

	public TUserProfileExperience merge(TUserProfileExperience detachedInstance) {
		log.debug("merging TUserProfileExperience instance");
		try {
			TUserProfileExperience result = (TUserProfileExperience) getHibernateTemplate().merge(detachedInstance);
			log.debug("merge successful");
			return result;
		} catch (RuntimeException re) {
			log.error("merge failed", re);
			throw re;
		}
	}

	public TUserProfileExperience findById(java.lang.Long id) {
		log.debug("getting TUserProfileExperience instance with id: " + id);
		try {
			TUserProfileExperience instance = (TUserProfileExperience) getHibernateTemplate().get(
							"com.jite.hibgen.model.TUserProfileExperience", id);
			if (instance == null) {
				log.debug("get successful, no instance found");
			} else {
				log.debug("get successful, instance found");
			}
			return instance;
		} catch (RuntimeException re) {
			log.error("get failed", re);
			throw re;
		}
	}

	public List<TUserProfileExperience> findByExample(
			TUserProfileExperience instance) {
		log.debug("finding TUserProfileExperience instance by example");
		try {
			List<TUserProfileExperience> results = (List<TUserProfileExperience>) getHibernateTemplate().getSessionFactory()
					.getCurrentSession()
					.createCriteria("com.jite.hibgen.model.TUserProfileExperience")
					.add(create(instance)).list();
			log.debug("find by example successful, result size: "
					+ results.size());
			return results;
		} catch (RuntimeException re) {
			log.error("find by example failed", re);
			throw re;
		}
	}
	
	public void deleteByAccountId(Long accountId,String type) {
		log.debug("delte TUserProfileExperience by userId");
		try {
			String hql = "delete TUserProfileExperience as tupi where tupi.accountId=? and type=?";
			Query query = getHibernateTemplate().getSessionFactory()
					.getCurrentSession().createQuery(hql);
			query.setLong(0, accountId);
			query.setString(1, type);
			query.executeUpdate();
		} catch (Exception re) {
			log.error("Delete failed", re);
		}
	}
}

	
	

