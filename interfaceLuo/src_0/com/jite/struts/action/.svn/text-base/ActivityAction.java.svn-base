package com.jite.struts.action;

import java.util.List;

import javax.annotation.Resource;

import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;

import com.jite.service.ActivityService;
import com.jite.service.UserJobService;
import com.jite.struts.bean.ActivityInfo;
import com.jite.struts.bean.JobInfo;
import com.jite.struts.bean.MessageInfo;
import com.jite.struts.bean.UserJobInfo;
import com.jite.utils.SystemPropties;

public class ActivityAction extends BaseAction{

	/**
	 * 
	 */
	private static final long serialVersionUID = 4768083376835578317L;

	@Resource
	@Autowired
	ActivityService activityService;


	
	

	public ActivityService getActivityService() {
		return activityService;
	}

	public void setActivityService(ActivityService activityService) {
		this.activityService = activityService;
	}

	public void query() {
		returnJson=new JSONObject();
		if(activityService==null){
			ApplicationContext ac = WebApplicationContextUtils.getWebApplicationContext( request.getSession().getServletContext());
			activityService=(ActivityService)ac.getBean("activityService");
		}
		
		List<ActivityInfo> aList=activityService.queryPublishedActivities(pageNumber,pageSize);

		returnJson.put("code", SystemPropties.getProperties("code.success"));
		returnJson.put("info",SystemPropties.getProperties("txt.success"));
		returnJson.put("activityList", aList);
		returnJson.put("totalCount",activityService.queryPublishedActivitiesTotal());

		returnJsonStr(returnJson.toString());
	}

	public void queryWithJionList() {
		returnJson=new JSONObject();
		if(activityService==null){
			ApplicationContext ac = WebApplicationContextUtils.getWebApplicationContext( request.getSession().getServletContext());
			activityService=(ActivityService)ac.getBean("activityService");
		}
		
		List<ActivityInfo> aList=activityService.queryPublishedActivitiesWithJionList(pageNumber,pageSize);

		returnJson.put("code", SystemPropties.getProperties("code.success"));
		returnJson.put("info",SystemPropties.getProperties("txt.success"));
		returnJson.put("activityList", aList);
		returnJson.put("totalCount",activityService.queryPublishedActivitiesTotal());

		returnJsonStr(returnJson.toString());
	}	
	public void queryById() {
		returnJson=new JSONObject();
		if(activityService==null){
			ApplicationContext ac = WebApplicationContextUtils.getWebApplicationContext( request.getSession().getServletContext());
			activityService=(ActivityService)ac.getBean("activityService");
		}
		
		ActivityInfo aList=activityService.queryById(activeId,userId);

		returnJson.put("code", SystemPropties.getProperties("code.success"));
		returnJson.put("info",SystemPropties.getProperties("txt.success"));
		returnJson.put("activity", aList);

		returnJsonStr(returnJson.toString());
	}

	public void greatById() {
		returnJson=new JSONObject();
		if(activityService==null){
			ApplicationContext ac = WebApplicationContextUtils.getWebApplicationContext( request.getSession().getServletContext());
			activityService=(ActivityService)ac.getBean("activityService");
		}
		
		ActivityInfo aList=activityService.greatById(activeId);

		returnJson.put("code", SystemPropties.getProperties("code.success"));
		returnJson.put("info",SystemPropties.getProperties("txt.success"));
		returnJson.put("activity", aList);

		returnJsonStr(returnJson.toString());
	}
	
	public void join() {
		returnJson=new JSONObject();
		if(activityService==null){
			ApplicationContext ac = WebApplicationContextUtils.getWebApplicationContext( request.getSession().getServletContext());
			activityService=(ActivityService)ac.getBean("activityService");
		}
		
		ActivityInfo atInfo=activityService.join(activeId,userId);
		if(atInfo.getId()>0){
			returnJson.put("code", SystemPropties.getProperties("code.success"));
			returnJson.put("info",SystemPropties.getProperties("txt.jion_active")+SystemPropties.getProperties("txt.success"));
			returnJson.put("activity", atInfo);
		}else if(atInfo.getId()==-100L){
			returnJson.put("code", SystemPropties.getProperties("code.already_exists"));
			returnJson.put("info",SystemPropties.getProperties("txt.already_active"));			
		}else if(atInfo.getId()==-200L){
			returnJson.put("code", SystemPropties.getProperties("code.meet_max"));
			returnJson.put("info",SystemPropties.getProperties("txt.meet_max_jion"));						
		}else if(atInfo.getId()==-300L){
			returnJson.put("code", SystemPropties.getProperties("code.input_error"));
			returnJson.put("info",SystemPropties.getProperties("txt.can_not_join_active"));									
		}

		returnJsonStr(returnJson.toString());
	}
		
		
	private String userId;
	private String activeId;
	private String status;
	private int pageNumber;
	private int pageSize;
	
	
	public String getUserId() {
		return userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}


	public String getActiveId() {
		return activeId;
	}

	public void setActiveId(String activeId) {
		this.activeId = activeId;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public int getPageNumber() {
		return pageNumber;
	}

	public void setPageNumber(int pageNumber) {
		this.pageNumber = pageNumber;
	}

	public int getPageSize() {
		return pageSize;
	}

	public void setPageSize(int pageSize) {
		this.pageSize = pageSize;
	}

	

}
