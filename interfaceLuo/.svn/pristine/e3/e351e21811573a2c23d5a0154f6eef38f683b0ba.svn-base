package com.jite.struts.action;

import java.util.List;

import javax.annotation.Resource;

import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;

import com.jite.service.UserService;
import com.jite.service.WestplanService;
import com.jite.struts.bean.RedpkgInfo;
import com.jite.struts.bean.WestplanInfo;
import com.jite.utils.SystemPropties;
import com.jite.utils.VerificationCodeUtil;

public class RedpkgAction extends BaseAction{

	/**
	 * 
	 */
	private static final long serialVersionUID = 4768083376835578317L;

	@Resource
	@Autowired
	private UserService userService;

	public UserService getUserService() {
		return userService;
	}

	public void setUserService(UserService userService) {
		this.userService = userService;
	}
	
	public boolean checkInputParas(){
		boolean inputError=false;
		StringBuffer err=new StringBuffer();
		if(null==userId||"".equals(userId.trim())){
			inputError=true;
			err.append("userId ").append(SystemPropties.getProperties("txt.can_not_be_empty")).append("!");
		}
		if(inputError){
			returnError(SystemPropties.getProperties("code.input_error"),err.toString());
		}
		
		return !inputError;
	}
	
	public void enabledList() {
		returnJson=new JSONObject();

		returnJson.put("code", SystemPropties.getProperties("code.success"));
		returnJson.put("info",SystemPropties.getProperties("txt.success"));
		if(SystemPropties.getProperties("cfg.red_pkg_one_enable")!=null){
			returnJson.put("red_pkg_one_enable",Boolean.parseBoolean(SystemPropties.getProperties("cfg.red_pkg_one_enable")));
		}else{
			returnJson.put("red_pkg_one_enable",false);
		}

		if(SystemPropties.getProperties("cfg.red_pkg_two_enable")!=null){
			returnJson.put("red_pkg_two_enable",Boolean.parseBoolean(SystemPropties.getProperties("cfg.red_pkg_two_enable")));
		}else{
			returnJson.put("red_pkg_two_enable",false);
		}

		if(SystemPropties.getProperties("cfg.red_pkg_three_enable")!=null){
			returnJson.put("red_pkg_three_enable",Boolean.parseBoolean(SystemPropties.getProperties("cfg.red_pkg_three_enable")));
		}else{
			returnJson.put("red_pkg_three_enable",false);
		}
		returnJsonStr(returnJson.toString());
	}


	public void queryById() {
		if(checkInputParas()){
			returnJson=new JSONObject();
			if(userService==null){
				ApplicationContext ac = WebApplicationContextUtils.getWebApplicationContext( request.getSession().getServletContext());
				userService=(UserService)ac.getBean("userService");
			}
	
			List<RedpkgInfo> aList=userService.queryRedPkgListByUserId(userId);
	
			returnJson.put("code", SystemPropties.getProperties("code.success"));
			returnJson.put("info",SystemPropties.getProperties("txt.success"));
			returnJson.put("redPkgList", aList);
	
			returnJsonStr(returnJson.toString());
		}
	}

	public void openById() {
		if(checkInputParas()){
			returnJson=new JSONObject();
			if(userService==null){
				ApplicationContext ac = WebApplicationContextUtils.getWebApplicationContext( request.getSession().getServletContext());
				userService=(UserService)ac.getBean("userService");
			}
	
			int result=userService.openRedPkg(userId,pkgName);

			returnJson.put("code", SystemPropties.getProperties("code.success"));
			returnJson.put("info",SystemPropties.getProperties("txt.success"));
			returnJson.put("openResult",result);
			returnJsonStr(returnJson.toString());
		}
	}
		
		
	private String userId;
	private String pkgName;
	private int pageNumber;
	private int pageSize;
	
	
	public String getUserId() {
		return userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	public int getPageNumber() {
		return pageNumber;
	}

	public void setPageNumber(int pageNumber) {
		this.pageNumber = pageNumber;
	}

	public int getPageSize() {
		return pageSize;
	}

	public void setPageSize(int pageSize) {
		this.pageSize = pageSize;
	}

	public String getPkgName() {
		return pkgName;
	}

	public void setPkgName(String pkgName) {
		this.pkgName = pkgName;
	}

	

}
